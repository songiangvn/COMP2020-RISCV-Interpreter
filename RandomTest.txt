#4) Random test cases (Please reset the logisim circuit so that all the data is wiped)

#Add/Addi/Sub
addi x1, x0, 0x958
addi x2, x0, 0x753
add x3, x2, x1
sub x4, x2, x1

#Logical
and x5, x1, x2
andi x6, x1, 0x0f0
or x7, x1, x2
ori x8, x3, 0xcf0
xor x9, x1, x3
xori x10, x2, 0xdef

#Shifting Operators
addi x11, x0, 0x0ff
addi x12, x0, 25
sll x13, x11, x12
sll x14, x12, x12
addi x12, x0, 23
sra x15, x13, x12

#LUI Operators
lui x16, 0x23233
addi x16, x16, 0x932
lui x17, 0x9238
addi x17, x17, 0x409

#Compare Operators
slt x18, x2, x3
slt x19, x1, x2

#Store/Load Operators
sb x17,    2(x0  )
sw x15, 4(x0)
lb x20, 6(x0)
lw x21, 4(x0)

#Register Expected Results
## expect[0] = 0x00000000
## expect[1] 0xfffff958
## expect[2] = 0x00000753
## expect[3] = 0x000000ab
## expect[4] = 0x00000dfb
## expect[5] = 0x00000150
## expect[6] = 0x00000050
## expect[7] = 0xffffff5b
## expect[8] = 0xfffffcfb
## expect[9] = 0xfffff9f3
## expect[10] = 0xfffffabc
## expect[11] = 0x000000ff
## expect[12] = 0x00000017
## expect[13] = 0xfe000000
## expect[14] = 0x32000000
## expect[15] = 0xfffffffc
## expect[16] = 0x23232932
## expect[17] = 0x09238409
## expect[18] = 0x00000000
## expect[19] = 0x00000001
## expect[20] = 0xffffffff
## expect[21] = 0xfffffffc
## expect[22] = 0x00000000
## expect[23] = 0x00000000
## expect[24] = 0x00000000
## expect[25] = 0x00000000
## expect[26] = 0x00000000
## expect[27] = 0x00000000
## expect[28] = 0x00000000
## expect[29] = 0x00000000
## expect[30] = 0x00000000
## expect[31] = 0x00000000

#Checkpoint memory RAM
#M[0x00000] = 0x00090000 
#M[0x00001] = 0xfffffffc 
